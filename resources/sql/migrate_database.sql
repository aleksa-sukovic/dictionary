DROP DATABASE IF EXISTS dictionary;
CREATE DATABASE dictionary;
USE dictionary;

CREATE TABLE languages (
	code VARCHAR(10) PRIMARY KEY,
	label VARCHAR(255) NOT NULL
);

CREATE TABLE dictionaries (
	id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	description TEXT NULL,
	language_code VARCHAR(10) NULL,
	CONSTRAINT FK_DICTIONARIES_LANGUAGE FOREIGN KEY (language_code)
		REFERENCES languages(code)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE word_types (
	id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(255) NOT NULL
);

CREATE TABLE words (
	slug VARCHAR(255) PRIMARY KEY,
	value VARCHAR(255) NOT NULL,
	type_id INT NOT NULL,
	CONSTRAINT FK_WORDS_TYPES FOREIGN KEY (type_id)
		REFERENCES word_types(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE word_translations (
	id INT AUTO_INCREMENT PRIMARY KEY,
	word_slug VARCHAR(255) NOT NULL,
	language_code VARCHAR(10) NOT NULL,
	value VARCHAR(255) NOT NULL,
	CONSTRAINT FK_WORD_TRANSLATIONS_WORD FOREIGN KEY (word_slug)
		REFERENCES words(slug)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_WORD_TRANSLATIONS_LANGUAGE FOREIGN KEY (language_code)
		REFERENCES languages(code)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE word_form_types (
	id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(255) NOT NULL
);

CREATE TABLE word_form_states (
	id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(255) NOT NULL
);

CREATE TABLE word_forms (
	id INT AUTO_INCREMENT PRIMARY KEY,
	type_id INT NOT NULL,
	state_id INT NOT NULL,
	value VARCHAR(255),
	CONSTRAINT FK_WORD_FORMS_TYPE FOREIGN KEY (type_id)
		REFERENCES word_form_types(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_WORD_FORMS_STATES FOREIGN KEY (state_id)
		REFERENCES word_form_states(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);